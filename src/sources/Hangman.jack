class Hangman {
	field int state;
	field String word;
	field String guess;

	method boolean is_hanged() {
		return state > 9;
	}

	method boolean has_won() {
		var int i;
		let i = 0;

		while (i < guess.length()) {
			if (guess.charAt(i) = 95) {
				return false;
			}
			let i = i + 1;
		}

		return true;
	}

	constructor Hangman new() {
		let state = 0;
		let word = "HANGMAN";
		let guess = "_______";

		return this;
	}

	method void draw() {
		do Screen.clearScreen();
		do Output.moveCursor(0, 0);

		do Output.printString(guess);

		if (state > 0) {
			do Screen.drawLine(400, 245, 500, 245);
		}

		if (state > 1) {
			do Screen.drawLine(450, 245, 450, 50);
		}

		if (state > 2) {
			do Screen.drawLine(450, 50, 325, 50);
		}

		if (state > 3) {
			do Screen.drawLine(325, 50, 325, 75);
		}

		if (state > 4) {
			do Screen.drawCircle(325, 90, 15);
		}

		if (state > 5) {
			do Screen.drawLine(325, 105, 325, 175);
		}

		if (state > 6) {
			do Screen.drawLine(325, 135, 300, 110);
		}

		if (state > 7) {
			do Screen.drawLine(325, 135, 350, 110);
		}

		if (state > 8) {
			do Screen.drawLine(325, 175, 300, 205);
		}

		if (state > 9) {
			do Screen.drawLine(325, 175, 350, 205);
		}

		return;
	}

	method void guess(char letter) {
		var bool found;
		var int i;

		let found = false;
		let i = 0;
		
		while (i < word.length()) {
			if (word.charAt(i) = letter) {
				let found = true;
			}
			let i = i + 1;
		}

		if (~found) {
			let state = state + 1;
		} else {
			do set_visible(letter);
		}
		return;
	}

	method void set_visible(char letter) {
		var int i;

		let i = 0;
		
		while (i < word.length()) {
			if (word.charAt(i) = letter) {
				do guess.setCharAt(i, letter);
			}
			let i = i + 1;
		}

		return;
	}
}